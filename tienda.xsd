<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- Elemeto Padre que contien a biblioteca con su atributo -->
<!-- ............................................................................................. -->
<xs:element name="tienda">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="biblioteca" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="NIF" type="xs:string" use="required"/>
    </xs:complexType>
</xs:element>

<!-- Hijo de tiendad que asu vez contiene un total de 5 elemento, dos de los cuales son hijos(libros, clientes) -->
<!-- .......................................................................................................... -->
<xs:element name="biblioteca" >
    <xs:complexType>
        <xs:sequence>
            <xs:element name="nombre" type="xs:string"/>
            <xs:element name="company" type="xs:string"/>
            <xs:element name="url">
                <xs:simpleType>
                    <xs:restriction base="xs:string" >
                        <xs:pattern value="[www]{3}\.[a-z0-9]{2,}\.[A-Za-z]{2,}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <!-- llamamos a su hijos con "ref="" -->
            <xs:element ref="libros"/>
            <xs:element ref="clientes"/>
        </xs:sequence>
    </xs:complexType>
</xs:element>



<!-- Libros perteneciente a biblioteca, el elemento libro con mínimo y máximo de ocurrencias  -->
<!-- ........................................................................................................ -->
<xs:element name="libros">
    <xs:complexType>
        <xs:sequence>
            <!-- como minimo queremos que exista un libro y no tenemos lmite en el máximo -->
            <xs:element ref="libro" minOccurs="1" maxOccurs="unbounded"/> 
        </xs:sequence>
    </xs:complexType>
</xs:element>

<!-- Clientes perteneciente a biblioteca, el elemento libro con mínimo y máximo de ocurrencias  -->
<!-- ........................................................................................................ -->
<xs:element name="clientes">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="cliente" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
</xs:element>
    

                
<!-- Libro contiene varios elementos complejos que asu vez contienen elementos simples  -->
<!-- ......................................................................................................... -->
<xs:element name="libro">
<xs:complexType>
        <xs:sequence>

<xs:element name="nombre" type="xs:string"/>
<xs:element name="codigo">
    <xs:simpleType>
        <xs:restriction base="xs:string">
            <!-- restriccion de codigo 3 letras, 4 numeros, y 1 simbolo no alfanumerico  -->
            <xs:pattern value="[A-Za-z]{3}[0-9]{4}[^A-Za-z0-9]{2}"/>
        </xs:restriction>
    </xs:simpleType> 
</xs:element>
<!-- en el tipo lo declaramos en "date" lo cual nos indicara que metamos segun este orden año,mes,día -->
<xs:element name="fecha" type="xs:date"/>
<!-- indicamos que el valor del precio solo puede contener un total de 2 digitos de fracccion  -->
<!-- y un total de 4 numeros  -->
<xs:element name="precio">
    <xs:simpleType>
        <xs:restriction base="xs:decimal">
                <xs:fractionDigits value="2"/>
                <xs:totalDigits value=" 4"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>
<xs:element name="categoria">
    <xs:simpleType>
<!-- En la etiqueta categoria le indicamos que solo queremos que sean posibles entres estas tres opciones -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Ficción"/>
            <xs:enumeration value="Terror"/>
            <xs:enumeration value="Infantil"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>
<!-- En este caso indicamos que el type del atributo es un int con un valor 45 como fijo -->
<xs:element name="unidadesDisponibles" type="xs:int" fixed="45"/>
</xs:sequence>
<!-- atributi al cual le indicamos que puede o no aparecer pero si aparece tiene que aparecer con el numero 2 que le indicamos -->
<xs:attribute name="id" type="xs:int" />
</xs:complexType>
</xs:element>

<!-- Cliente contiene varios elementos complejos que asu vez contienen elementos simples  -->
<!-- ......................................................................................................... -->

<xs:element name="cliente">
    <xs:complexType>
        <xs:sequence>
<xs:element name="nombre" type="xs:string"/>
<xs:element name="codigo">
        <xs:simpleType>
            <xs:restriction base="xs:string">
<!-- restriccion de codigo 3 letras, 4 numeros, y 1 simbolo no alfanumerico  -->
            <xs:pattern value="[A-Za-z]{3}[0-9]{4}[^A-Za-z0-9]{2}"/>
        </xs:restriction>
    </xs:simpleType> 
</xs:element>
            <!-- en el tipo lo declaramos en "date" lo cual nos indicara que metamos segun este orden año,mes,día -->
<xs:element name="fecha" type="xs:date"/>

<xs:element name="apellidos">
    <xs:complexType>
<!-- con la etiqueta choice le indicamos que queremos uno de estos dos apellidos  -->
        <xs:choice>
            <xs:element name="primerapellido" type="xs:string"/>
            <xs:element name="segundoapellido" type="xs:string"/>
        </xs:choice>
    </xs:complexType>
</xs:element>
<xs:element name="edad">
    <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
            <xs:minInclusive value="18"/>
            <xs:maxExclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>
<!-- aplicamos un restricion al email -->
<xs:element name="email">
    <xs:simpleType>
        <xs:restriction base="xs:string" >
            <xs:pattern value="[A-Za-z0-9]*@+[A-Za-z0-9-]*.[A-Za-z]{2,}"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>
<xs:element name="telefono">
    <xs:simpleType>
        <xs:restriction base="xs:string">
<!-- queremos 3 numeros que se encuentren dentro del parentesis prresedidos de el signo + -->
<!-- y que contenga 9 numeros  -->
            <xs:pattern value="\(\+[0-9]{3}\)[0-9]{9}"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>
<xs:element name="direccion">
    <xs:simpleType>
        <xs:restriction base="xs:string">
<!--indicamos como debemos tratar los espacios en blanco, tabulaciones, los saltos de línea-->
<!-- otras opciones: -->
<!-- replace -> sustituye todas las tabulaciones por espacios en blanco -->
<!-- collapse-> los espacios en blanco eliminarlos y los varios espacios en blanco por un unico -->
            <xs:whiteSpace value="preserve"/>
        </xs:restriction>
    </xs:simpleType>
</xs:element>


<!-- Cierre del elemento tienda y el schema -->
</xs:sequence>
<!-- le indicamos que el atributo es obligatorio que lo indiquemos /podemos obtar por la optional  -->
<xs:attribute name="identificador" type="xs:string" use="required"  />
</xs:complexType>
</xs:element>

<!-- ........................................................................................................... -->
</xs:schema>  
<!-- ..............................................Fin........................................ -->
<!-- Cristina he dejado comentado la etiqueta "datos_comun" ya que era la que contenia mis elementos 
"nombre" ," codigo", "fecha" tanto para cliente como para libro, el problema que me surgio era que queria encapsular 
estos tres elementos dentro de la etiqueta , lo que me daba un proble en el XSL donde al poner la ruta no habia forma que 
me mostra ya que solo lograba o poner la ruta ->"select="//libro" la que me mostraba todos los elemnteos 
, lo que pasaba era que "datos en comun" me mostraba en una sola celda -> logre que me mostra el contenido pero 
esto implicaba que la ruta tenia que cambiar ->select="//libro/datos_comun" , esto me mostraba los tres elementos 
que contenia este pero no me lograba mostrar el resto del contenido de libro. Mi opción fue quitar la etiqueta de 
"datos_comun" y llamar a cada elemento individualmente  eso si para evitar las muñecas rusas , deje 
creado el "TYPE=datos:basicos" el cual se lo pase a cada elemento básico-->